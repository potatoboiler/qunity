ident      = @{ ASCII_ALPHA ~ (ASCII_ALPHA | ASCII_DIGIT)* }
WHITESPACE = _{ " " | "\t" | "\r" | "\n" }

// builtin types
types  =  { "void" | "()" | "bit" | array_t }
number = @{ ASCII_DIGIT+ | ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ }
// list    =  { "[" ~ (expr ~ (";" ~ expr)*)* ~ "]" }
array_t = { "array" ~ types ~ number }

// value type
expr = _{
    "(" ~ all ~ ")"
  | prog
  | types
  | ident
  | number
}

u3     =  { "u3" ~ expr ~ expr ~ expr }
left   =  { "left" ~ expr }
right  =  { "right" ~ expr }
rphase =  { "rphase" ~ expr ~ expr ~ expr }
gphase =  { "gphase" ~ expr ~ expr }
prog   = _{
    u3
  | lambda
  | left
  | right
  | gphase
  | rphase
}

// chain together gates
chain = { expr ~ ("|>" ~ expr)+ }

ctrl      = { "ctrl" ~ expr ~ types ~ ctrl_list ~ types }
ctrl_list = { "[" ~ (arm ~ (";" ~ arm)*)* ~ "]" }
arm       = { expr ~ "=>>" ~ expr }

let    = { "let" ~ expr ~ "in" ~ expr }
try    = { "try" ~ expr ~ "catch" ~ expr }
lambda = { "lambda" ~ expr ~ expr ~ expr }

all = _{
    chain
  | let
  | try
  | ctrl
  | expr
}

program = { ident ~ (ident)* ~ ":=" ~ all }
